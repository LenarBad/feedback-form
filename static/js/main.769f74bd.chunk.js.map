{"version":3,"sources":["serviceWorker.js","appConstants/index.ts","cnt/Product/validation.ts","cnt/Product/index.tsx","cmp/Copyright/index.tsx","cnt/Order/validation.ts","cnt/Order/index.tsx","cnt/Finish/index.tsx","cnt/Review/index.tsx","App.tsx","index.tsx","styles/common.module.css","assets/765632.png"],"names":["Boolean","window","location","hostname","match","Rating","UsaState","RatingText","VERY_SATISFIED","toString","SOMEWHAT_SATISFIED","NEITHER_SATISFIED_NOR_DISSATISFIED","SOMEWHAT_DISSATISFIED","VERY_DISSATISFIED","RatingToText","rating","validation","product","date","wasUsed","useStyles","makeStyles","theme","createStyles","root","display","flexWrap","formControl","margin","spacing","minWidth","selectEmpty","marginTop","select","grid","title","fontWeight","ProductForm","onChange","initialValues","classes","React","useState","values","setValues","handleChange","event","target","name","value","oldValues","useEffect","isValid","Typography","variant","gutterBottom","className","Grid","container","direction","item","xs","cssCommon","signFormField","InputLabel","htmlFor","Select","inputProps","id","MenuItem","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","maxDate","Date","minDate","autoOk","RadioGroup","aria-label","FormControlLabel","control","Radio","label","Copyright","color","align","Link","href","getFullYear","first","last","orderNumber","email","street","city","zipCode","usaState","consentToSpecialOffer","input","Order","TextField","required","Object","entries","map","it","key","Finish","containerIngLogo","justifyContent","textField","width","backgroundColor","borderTopLeftRadius","borderTopRightRadius","wrapBtn","ColorButtonAmazon","withStyles","purple","Button","ColorButton","Review","onNextStep","reviewText","freeProduct","canToNextStep","length","charactersLeft","cn","src","img","alt","multiline","rowsMax","rows","style","fontSize","hasMinRating","onClick","disabled","appBar","position","layout","marginLeft","marginRight","breakpoints","up","paper","marginBottom","padding","stepper","buttons","button","steps","ReactDOM","render","activeStep","setActiveStep","handleNext","undefined","globalData","setGlobalData","handleChangeDataProduct","useCallback","data","d","nextData","slice","handleChangeDataOrder","handleChangeReview","CssBaseline","Paper","component","Stepper","Step","StepLabel","step","Product","Error","getStepContent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.769f74bd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum Rating {\n    VERY_SATISFIED = '0',\n    SOMEWHAT_SATISFIED = '1',\n    NEITHER_SATISFIED_NOR_DISSATISFIED = '2',\n    SOMEWHAT_DISSATISFIED = '3',\n    VERY_DISSATISFIED = '4'\n}\n\nconst RatingText = {\n    [Rating.VERY_SATISFIED.toString()]: 'Very Satisfied',\n    [Rating.SOMEWHAT_SATISFIED.toString()]: 'Somewhat Satisfied',\n    [Rating.NEITHER_SATISFIED_NOR_DISSATISFIED.toString()]: 'Neither Satisfied nor Dissatisfied',\n    [Rating.SOMEWHAT_DISSATISFIED.toString()]: 'Somewhat Dissatisfied',\n    [Rating.VERY_DISSATISFIED.toString()]: 'Very Dissatisfied',\n};\n\nexport function RatingToText(rating: Rating): string {\n    return RatingText[rating];\n}\n\nexport function hasMinRating(rating: Rating, target: Rating): boolean {\n    return target <= rating;\n}\n\nexport enum UsaState {\n    ALABAMA = 'Alabama',\n    ALASKA = 'Alaska',\n    ARIZONA = 'Arizona',\n    ARKANSAS = 'Arkansas',\n    CALIFORNIA = 'California',\n    COLORADO = 'Colorado',\n    CONNECTICUT = 'Connecticut',\n    DELAWARE = 'Delaware',\n    FLORIDA = 'Florida',\n    GEORGIA = 'Georgia',\n    HAWAII = 'Hawaii',\n    IDAHO = 'Idaho',\n    ILLINOISINDIANA = 'IllinoisIndiana',\n    IOWA = 'Iowa',\n    KANSAS = 'Kansas',\n    KENTUCKY = 'Kentucky',\n    LOUISIANA = 'Louisiana',\n    MAINE = 'Maine',\n    MARYLAND = 'Maryland',\n    MASSACHUSETTS = 'Massachusetts',\n    MICHIGAN = 'Michigan',\n    MINNESOTA = 'Minnesota',\n    MISSISSIPPI = 'Mississippi',\n    MISSOURI = 'Missouri',\n    MONTANANEBRASKA = 'MontanaNebraska',\n    NEVADA = 'Nevada',\n    NEW_HAMPSHIRE = 'New Hampshire',\n    NEW_JERSEY = 'New Jersey',\n    NEW_MEXICO = 'New Mexico',\n    NEW_YORK = 'New York',\n    NORTH_CAROLINA = 'North Carolina',\n    NORTH_DAKOTA = 'North Dakota',\n    OHIO = 'Ohio',\n    OKLAHOMA = 'Oklahoma',\n    OREGON = 'Oregon',\n    PENNSYLVANIA = 'Pennsylvania',\n    RHODE_ISLAND = 'Rhode Island',\n    SOUTH_CAROLINA = 'South Carolina',\n    SOUTH_DAKOTA = 'South Dakota',\n    TENNESSEE = 'Tennessee',\n    TEXAS = 'Texas',\n    UTAH = 'Utah',\n    VERMONT = 'Vermont',\n    VIRGINIA = 'Virginia',\n    WASHINGTON = 'Washington',\n    WEST_VIRGINIA = 'West Virginia',\n    WISCONSIN = 'Wisconsin',\n    WYOMING = 'Wyoming',\n}\n\n\n\n\n\n","import { Values } from './types';\n\nexport function validation({ product, date, rating, wasUsed }: Values): boolean {\n    return !!(product && date && rating && wasUsed);\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { Rating, RatingToText } from 'appConstants';\n\nimport { Values } from './types';\nimport { validation } from './validation';\n\nimport cssCommon from 'styles/common.module.css';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n\n        select: {\n            minWidth: '300px'\n        },\n\n        date: {\n            minWidth: '300px'\n        },\n\n        grid: {\n            marginTop: '24px'\n        },\n        title: {\n            fontWeight: 'bold',\n        }\n    }),\n);\n\ninterface Props {\n    onChange: (arg: {\n        values: Values;\n        isValid: boolean;\n    }) => void;\n\n    initialValues?: any;\n}\n\nfunction ProductForm({ onChange, initialValues }: Props) {\n    const classes = useStyles();\n    const [values, setValues] = React.useState<Values>(initialValues || {\n        product: '',\n        date: null,\n        rating: '',\n        wasUsed: '',\n    });\n\n    const handleDateChange = (date: Date | null) => {\n        setValues(oldValues => ({\n            ...oldValues,\n            date,\n        }));\n    };\n    const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        const { name, value } = event.target;\n\n        setValues(oldValues => ({\n            ...oldValues,\n            [name as string]: value,\n        }));\n    };\n\n    React.useEffect(() => {\n        onChange({\n            values,\n            isValid: validation(values),\n        })\n    }, [values, onChange]);\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                PLEASE TELL US WHICH PRODUCT YOU'RE PURCHASED\n            </Typography>\n\n            <Grid container direction=\"column\" spacing={5} className={classes.grid}>\n                <Grid item xs={12}>\n                    <div className={cssCommon.signFormField}>Which product did you purchase ?</div>\n\n                    <InputLabel htmlFor=\"product-name\"/>\n                    <Select\n                        className={classes.select}\n                        value={values.product}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'product',\n                            id: 'product-name',\n                        }}\n                    >\n                        <MenuItem value=\"Product 1\">Product 1</MenuItem>\n                        <MenuItem value=\"Product 2\">Product 2</MenuItem>\n                        <MenuItem value=\"Product 3\">Product 3</MenuItem>\n                    </Select>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <div className={cssCommon.signFormField}>Date Purchased </div>\n\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        name=\"date\"\n                        value={values.date}\n                        onChange={handleDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        maxDate={new Date()}\n                        minDate={new Date('2019-06-01')}\n                        autoOk\n                    />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <RadioGroup aria-label=\"rating\" value={values.rating.toString()} onChange={handleChange}>\n                        <FormControlLabel value={Rating.VERY_SATISFIED} control={<Radio />} name=\"rating\" label={RatingToText(Rating.VERY_SATISFIED)} />\n                        <FormControlLabel value={Rating.SOMEWHAT_SATISFIED} control={<Radio />} name=\"rating\" label={RatingToText(Rating.SOMEWHAT_SATISFIED)} />\n                        <FormControlLabel value={Rating.NEITHER_SATISFIED_NOR_DISSATISFIED} name=\"rating\" control={<Radio />} label={RatingToText(Rating.NEITHER_SATISFIED_NOR_DISSATISFIED)} />\n                        <FormControlLabel value={Rating.SOMEWHAT_DISSATISFIED} control={<Radio />} name=\"rating\" label={RatingToText(Rating.SOMEWHAT_DISSATISFIED)} />\n                        <FormControlLabel value={Rating.VERY_DISSATISFIED} control={<Radio />} name=\"rating\" label={RatingToText(Rating.VERY_DISSATISFIED)} />\n                    </RadioGroup>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <div className={cssCommon.signFormField}>Have you been using this product for at least 7 days ?</div>\n\n                    <RadioGroup aria-label=\"have using\" value={values.wasUsed} onChange={handleChange}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} name=\"wasUsed\" label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} name=\"wasUsed\" label=\"No\" />\n                    </RadioGroup>\n                </Grid>\n\n            </Grid>\n        </>\n    );\n}\n\nexport default ProductForm;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nexport default function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n","import {Values} from './types';\n\nexport function validation({first, last, orderNumber, email, street, city, zipCode, usaState, consentToSpecialOffer}: Values): boolean {\n    return !!(first && last && orderNumber && email && street && city && zipCode && usaState && consentToSpecialOffer);\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport {UsaState} from 'appConstants';\n\nimport {Values} from './types';\nimport {validation} from './validation';\n\nimport cssCommon from 'styles/common.module.css';\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n\n        input: {\n            minWidth: '400px'\n        },\n\n        select: {\n            minWidth: '400px'\n        },\n\n        grid: {\n            marginTop: '24px'\n        },\n        title: {\n            fontWeight: 'bold',\n        }\n    }),\n);\n\ninterface Props {\n    onChange: (arg: {\n        values: Values;\n        isValid: boolean;\n    }) => void;\n\n    initialValues?: Values;\n}\n\nfunction Order({onChange, initialValues}: Props) {\n    const classes = useStyles();\n    const [values, setValues] = React.useState<Values>(initialValues || {\n        first: '',\n        last: '',\n        orderNumber: '',\n        email: '',\n        street: '',\n        city: '',\n        zipCode: '',\n        usaState: '',\n        consentToSpecialOffer: 'Yes',\n    });\n\n\n    const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        const {name, value} = event.target;\n        setValues(oldValues => ({\n            ...oldValues,\n            [name as string]: value,\n        }));\n    };\n\n    React.useEffect(() => {\n        onChange({\n            values,\n            isValid: validation(values),\n        })\n    }, [values, onChange]);\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                PLEASE ENTER YOUR INFORMATION WITH YOUR AMAZON ORDER NUMBER\n            </Typography>\n\n\n            <Grid container direction=\"column\" spacing={5} className={classes.grid}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        id=\"first\"\n                        name=\"first\"\n                        label=\"First Name\"\n                        onChange={handleChange}\n                        value={values.first}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        id=\"last\"\n                        name=\"last\"\n                        label=\"Last Name\"\n                        onChange={handleChange}\n                        value={values.last}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        id=\"orderNumber\"\n                        name=\"orderNumber\"\n                        label=\"Amazon Order Number (Include Dashes)\"\n                        onChange={handleChange}\n                        value={values.orderNumber}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"Email Address\"\n                        onChange={handleChange}\n                        value={values.email}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        id=\"street\"\n                        name=\"street\"\n                        label=\"Street Address\"\n                        onChange={handleChange}\n                        value={values.street}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        id=\"city\"\n                        name=\"city\"\n                        label=\"City\"\n                        onChange={handleChange}\n                        value={values.city}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        id=\"zipCode\"\n                        name=\"zipCode\"\n                        label=\"Zip Code\"\n                        onChange={handleChange}\n                        value={values.zipCode}\n                    />\n                </Grid>\n\n\n                <Grid item xs={12}>\n                    <div className={cssCommon.signFormField}>State</div>\n\n                    <InputLabel htmlFor=\"usaState\"/>\n                    <Select\n                        className={classes.select}\n                        value={values.usaState}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'usaState',\n                            id: 'usaState',\n                        }}\n                    >\n                        {makeItemsOfState()}\n                    </Select>\n                </Grid>\n\n\n                <Grid item xs={12}>\n                    <div className={cssCommon.signFormField}>Please send me special offers and samples.</div>\n\n                    <RadioGroup aria-label=\"have using\" value={values.consentToSpecialOffer} onChange={handleChange}>\n                        <FormControlLabel value=\"Yes\" control={<Radio/>} name=\"consentToSpecialOffer\" label=\"Yes\"/>\n                        <FormControlLabel value=\"No\" control={<Radio/>} name=\"consentToSpecialOffer\" label=\"No\"/>\n                    </RadioGroup>\n                </Grid>\n\n            </Grid>\n        </>\n    );\n}\n\nexport default Order;\n\nfunction makeItemsOfState(): React.ReactNodeArray {\n    return Object.entries(UsaState).map(it => <MenuItem key={it[0]} value={it[0]}>{it[1]}</MenuItem>);\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n\n        input: {\n            minWidth: '400px'\n        },\n\n        select: {\n            minWidth: '400px'\n        },\n\n        grid: {\n            marginTop: '24px'\n        },\n        title: {\n            fontWeight: 'bold',\n        }\n    }),\n);\n\n\nfunction Finish() {\n    const classes = useStyles();\n\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                THANK YOU!\n            </Typography>\n\n\n            <Grid container direction=\"column\" spacing={5} className={classes.grid}>\n                <Grid item xs={12}>\n                    We value your time and appreciate your business. One of our customers support representatives will\n                    reach out to you soon. Enjoy your free item!\n                </Grid>\n\n                <Grid item xs={12}>\n\n                    ....... another text ............\n                    <br/>\n                    you must show the date these offers are valid and bla bla bla\n                </Grid>\n\n\n            </Grid>\n        </>\n    );\n}\n\nexport default Finish;\n","import React from 'react';\nimport cn from 'classnames';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\nimport {purple} from '@material-ui/core/colors';\n\nimport img from 'assets/765632.png';\n\nimport {Values} from './types';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport {hasMinRating, Rating} from 'appConstants';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n\n        select: {\n            minWidth: '300px'\n        },\n\n        grid: {\n            marginTop: '48px'\n        },\n        title: {\n            fontWeight: 'bold',\n        },\n\n        containerIngLogo: {\n            display: 'flex',\n            justifyContent: 'center'\n        },\n        textField: {\n            // marginLeft: theme.spacing(1),\n            // marginRight: theme.spacing(1),\n            width: '100%',\n            backgroundColor: 'rgba(0, 0, 0, 0.05)',\n            borderTopLeftRadius: '3px',\n            borderTopRightRadius: '3px',\n        },\n\n        wrapBtn: {\n            display: 'flex',\n            justifyContent: 'center',\n        },\n    }),\n);\n\nconst ColorButtonAmazon = withStyles(theme => ({\n    root: {\n        color: 'white',\n        fontWeight: 'bold',\n        backgroundColor: '#3785D3',\n        '&:hover': {\n            backgroundColor: purple[700],\n        },\n    },\n}))(Button);\n\nconst ColorButton = withStyles(theme => ({\n    root: {\n        color: 'white',\n        fontWeight: 'bold',\n        backgroundColor: '#1C1C1C',\n        '&:hover': {\n            backgroundColor: purple[700],\n        },\n    },\n}))(Button);\n\ninterface Props {\n    onChange: (arg: {\n        values: Values;\n        isValid: boolean;\n    }) => void;\n\n    initialValues?: any;\n    rating?: Rating;\n\n    onNextStep(): void;\n}\n\nfunction Review({onChange, initialValues, onNextStep, rating}: Props) {\n    const classes = useStyles();\n    const [values, setValues] = React.useState<Values>(initialValues || {\n        reviewText: '',\n        freeProduct: '',\n    });\n\n    const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        const {name, value} = event.target;\n        setValues(oldValues => ({\n            ...oldValues,\n            [name as string]: value,\n        }));\n    };\n\n    const canToNextStep = values.reviewText.length >= 150 && values.freeProduct;\n    const charactersLeft = values.reviewText.length < 150 ? 150 - values.reviewText.length : 0;\n\n    React.useEffect(() => {\n        onChange({\n            values,\n            isValid: true,\n        })\n    }, [values, onChange]);\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                PLEASE TELL US WHICH FREE PRODUCT YOU'D LIKE TO RECEIVE.\n            </Typography>\n\n            <Grid container direction=\"column\" spacing={5}>\n                <Grid item xs={12}>\n                    <InputLabel htmlFor=\"product-name\"/>\n                    <Select\n                        className={classes.select}\n                        value={values.freeProduct}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'freeProduct',\n                            id: 'free-product',\n                        }}\n                    >\n                        <MenuItem value=\"Product 1\">Product 1</MenuItem>\n                        <MenuItem value=\"Product 2\">Product 2</MenuItem>\n                        <MenuItem value=\"Product 3\">Product 3</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n\n            <Typography variant=\"h6\" gutterBottom className={cn(classes.title, classes.grid)}>\n                PLEASE SHARE YOUR EXPERIENCE!\n            </Typography>\n\n            <Grid container direction=\"column\" spacing={5}>\n                <Grid item xs={12}>\n                    We would love to earn your product feedback! You can copy your review below and share your product\n                    experience on Amazon. It would really help our business. Thank you!\n                </Grid>\n\n                <Grid item xs={12} className={classes.containerIngLogo}>\n                    <img src={img} alt=\"of amazon logo\"/>\n                </Grid>\n\n                <Grid item xs={12}>\n                    Review / Comments (Minimum 150 characters to be eligible for your free item)\n\n                    <TextField\n                        id=\"standard-multiline-flexible\"\n                        multiline\n                        rowsMax=\"8\"\n                        value={values.reviewText}\n                        onChange={handleChange}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        name=\"reviewText\"\n                        rows={3}\n                    />\n\n                    {charactersLeft > 0 &&\n                    <div style={{color: 'gray', fontSize: '14px', marginTop: '-10px'}}>left: {charactersLeft}</div>}\n                </Grid>\n\n                {rating && hasMinRating(rating, Rating.SOMEWHAT_SATISFIED) &&\n                    <Grid item xs={12} className={classes.wrapBtn}>\n                        <ColorButtonAmazon onClick={() => {\n                        }} variant=\"contained\">\n                            CLICK POST A REVIEW ON AMAZON\n                        </ColorButtonAmazon>\n                    </Grid>\n                }\n\n                <Grid item xs={12} className={classes.wrapBtn}>\n                    <ColorButton onClick={onNextStep} variant=\"contained\" disabled={!canToNextStep}>\n                        SUBMIT AND GET YOUR FREE ITEM!\n                    </ColorButton>\n                </Grid>\n\n                <Grid item xs={12}>\n                    Limit one free item per household or customer. Offer only valid with full-priced purchases. Proof of\n                    purchase from an authorized retailer required.\n                    No additional purchase is necessary.........\n                </Grid>\n            </Grid>\n\n\n        </>\n    );\n}\n\nexport default Review;\n","import React from 'react';\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Product from 'cnt/Product';\nimport Copyright from 'cmp/Copyright';\nimport {Values as ProductValues} from 'cnt/Product/types';\nimport Order from 'cnt/Order';\nimport {Values as OrderValues} from 'cnt/Order/types';\nimport Finish from 'cnt/Finish';\nimport Review from 'cnt/Review';\nimport { Values as ValuesReview } from 'cnt/Review/types';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 800,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(800 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst steps = ['', '', '', ''];\n\n/**\n * App\n */\nexport default function App() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n\n    const handleNext = () => {\n        setActiveStep(activeStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    const [globalData, setGlobalData] = React.useState<any>([undefined, undefined, undefined]);\n\n    /**\n     * for product\n     */\n    const handleChangeDataProduct = React.useCallback((data: { values: ProductValues; isValid: boolean; }) => {\n        setGlobalData((d: any) => {\n            const nextData = d.slice();\n            nextData[0] = data;\n            return nextData;\n        });\n    }, []);\n\n    /**\n     * for Data Order\n     */\n    const handleChangeDataOrder = React.useCallback((data: { values: OrderValues; isValid: boolean; }) => {\n        setGlobalData((d: any) => {\n            const nextData = d.slice();\n            nextData[1] = data;\n            return nextData;\n        });\n    }, []);\n\n    /**\n     * for review\n     */\n    const handleChangeReview = React.useCallback((data: { values: ValuesReview; isValid: boolean; }) => {\n        setGlobalData((d: any) => {\n            const nextData = d.slice();\n            nextData[2] = data;\n            return nextData;\n        });\n    }, []);\n\n    const getStepContent = (step: any) => {\n        switch (step) {\n            case 0:\n                return <Product onChange={handleChangeDataProduct}\n                                initialValues={globalData[0] && globalData[0].values ? globalData[0].values : undefined}/>;\n            case 1:\n                return <Order onChange={handleChangeDataOrder}\n                              initialValues={globalData[1] && globalData[1].values ? globalData[1].values : undefined}/>;\n            case 2:\n                return <Review onChange={handleChangeReview} onNextStep={handleNext}\n                    rating={globalData[0] && globalData[0].values && globalData[0].values.rating}\n                               initialValues={globalData[2] && globalData[2].values ? globalData[2].values : undefined}/>;\n            case 3:\n                return <Finish/>;\n            default:\n                throw new Error('Unknown step');\n        }\n    };\n\n    return (\n        <>\n            <CssBaseline/>\n\n            <main className={classes.layout}>\n                <Paper className={classes.paper}>\n\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                        Thank you for your purchase\n                    </Typography>\n\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\n                        {steps.map(label => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n\n                    <>\n                        {activeStep === steps.length ? (\n                            <>\n                                <Typography variant=\"h5\" gutterBottom>\n                                    Thank you for your order.\n                                </Typography>\n                                <Typography variant=\"subtitle1\">\n                                    Your order number is #2001539. We have emailed your order confirmation, and will\n                                    send you an update when your order has shipped.\n                                </Typography>\n                            </>\n                        ) : (\n                            <>\n                                {getStepContent(activeStep)}\n\n                                <div className={classes.buttons}>\n                                    {(activeStep === 1) && (\n                                        <Button onClick={handleBack} className={classes.button}>\n                                            Back\n                                        </Button>\n                                    )}\n                                    {activeStep <= 1 && <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                        disabled={!(globalData[activeStep] && globalData[activeStep].isValid)}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'Place order' : 'CONTINUE'}\n                                    </Button>}\n                                </div>\n                            </>\n                        )}\n                    </>\n                </Paper>\n\n                <Copyright/>\n            </main>\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/global.css';\nimport 'styles/var.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signFormField\":\"common_signFormField__2k90f\"};","module.exports = __webpack_public_path__ + \"static/media/765632.6039c88b.png\";"],"sourceRoot":""}